class Solution {
    public int numberOfBoomerangs(int[][] points) {
        // 用来记录回旋镖的数量
        int result = 0;
        for (int i = 0; i < points.length; i++) {
            // center 是目标点
            int[] center = points[i];
            Map<Integer, Integer> map = new HashMap<>();
            // 第二个循环用来计算目标点到其他点的距离
            for (int j = 0; j < points.length; j++) {
                // 两点之间距离的计算公式
                int distance = (center[0] - points[j][0]) * (center[0] - points[j][0]) + 
                                (center[1] - points[j][1]) * (center[1] - points[j][1]);
                map.put(distance, map.getOrDefault(distance, 0) + 1);
            }
            for (Integer key : map.keySet()) {
                // 根据数学知识可知，当同一个距离出现 n 此是
                // 回旋镖的数量为 sum = n * (n - 1);
                result += map.get(key) * (map.get(key) - 1);
            }
        }
        return result;
    }
}
